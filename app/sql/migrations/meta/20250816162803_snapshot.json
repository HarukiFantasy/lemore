{
  "id": "80dcddc3-8629-41a0-8521-15adec99580a",
  "prevId": "97230911-46b2-4a0a-9879-6ac52583a5a0",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.categories": {
      "name": "categories",
      "schema": "",
      "columns": {
        "category_id": {
          "name": "category_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "categories_category_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "name": {
          "name": "name",
          "type": "product_category",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "categories_select_policy": {
          "name": "categories_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.challenge_calendar_items": {
      "name": "challenge_calendar_items",
      "schema": "",
      "columns": {
        "item_id": {
          "name": "item_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "challenge_calendar_items_item_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "scheduled_date": {
          "name": "scheduled_date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "completed": {
          "name": "completed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "reflection": {
          "name": "reflection",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "challenge_calendar_items_user_date_idx": {
          "name": "challenge_calendar_items_user_date_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "scheduled_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "challenge_calendar_items_user_completed_idx": {
          "name": "challenge_calendar_items_user_completed_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "completed",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "challenge_calendar_items_user_id_user_profiles_profile_id_fk": {
          "name": "challenge_calendar_items_user_id_user_profiles_profile_id_fk",
          "tableFrom": "challenge_calendar_items",
          "tableTo": "user_profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "challenge_calendar_items_select_policy": {
          "name": "challenge_calendar_items_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\"challenge_calendar_items\".\"user_id\" = (select auth.uid())"
        },
        "challenge_calendar_items_insert_policy": {
          "name": "challenge_calendar_items_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"challenge_calendar_items\".\"user_id\" = (select auth.uid())"
        },
        "challenge_calendar_items_update_policy": {
          "name": "challenge_calendar_items_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\"challenge_calendar_items\".\"user_id\" = (select auth.uid())",
          "withCheck": "\"challenge_calendar_items\".\"user_id\" = (select auth.uid())"
        },
        "challenge_calendar_items_delete_policy": {
          "name": "challenge_calendar_items_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "\"challenge_calendar_items\".\"user_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.item_analyses": {
      "name": "item_analyses",
      "schema": "",
      "columns": {
        "analysis_id": {
          "name": "analysis_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "session_id": {
          "name": "session_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "item_name": {
          "name": "item_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "item_category": {
          "name": "item_category",
          "type": "product_category",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "item_condition": {
          "name": "item_condition",
          "type": "product_condition",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "recommendation": {
          "name": "recommendation",
          "type": "recommendation_action",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "recommendation_reason": {
          "name": "recommendation_reason",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "emotional_attachment_keywords": {
          "name": "emotional_attachment_keywords",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "usage_pattern_keywords": {
          "name": "usage_pattern_keywords",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "decision_factor_keywords": {
          "name": "decision_factor_keywords",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "personality_insights": {
          "name": "personality_insights",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "decision_barriers": {
          "name": "decision_barriers",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "emotional_score": {
          "name": "emotional_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "ai_listing_title": {
          "name": "ai_listing_title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ai_listing_description": {
          "name": "ai_listing_description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ai_listing_location": {
          "name": "ai_listing_location",
          "type": "location",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "images": {
          "name": "images",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "item_analyses_session_id_let_go_buddy_sessions_session_id_fk": {
          "name": "item_analyses_session_id_let_go_buddy_sessions_session_id_fk",
          "tableFrom": "item_analyses",
          "tableTo": "let_go_buddy_sessions",
          "columnsFrom": [
            "session_id"
          ],
          "columnsTo": [
            "session_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "item_analyses_select_policy": {
          "name": "item_analyses_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n      SELECT 1 FROM let_go_buddy_sessions lgbs \n      WHERE lgbs.session_id = \"item_analyses\".\"session_id\" \n      AND lgbs.user_id = (select auth.uid())\n    )"
        },
        "item_analyses_insert_policy": {
          "name": "item_analyses_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (\n      SELECT 1 FROM let_go_buddy_sessions lgbs \n      WHERE lgbs.session_id = \"item_analyses\".\"session_id\" \n      AND lgbs.user_id = (select auth.uid())\n    )"
        },
        "item_analyses_update_policy": {
          "name": "item_analyses_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n      SELECT 1 FROM let_go_buddy_sessions lgbs \n      WHERE lgbs.session_id = \"item_analyses\".\"session_id\" \n      AND lgbs.user_id = (select auth.uid())\n    )",
          "withCheck": "EXISTS (\n      SELECT 1 FROM let_go_buddy_sessions lgbs \n      WHERE lgbs.session_id = \"item_analyses\".\"session_id\" \n      AND lgbs.user_id = (select auth.uid())\n    )"
        },
        "item_analyses_delete_policy": {
          "name": "item_analyses_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n      SELECT 1 FROM let_go_buddy_sessions lgbs \n      WHERE lgbs.session_id = \"item_analyses\".\"session_id\" \n      AND lgbs.user_id = (select auth.uid())\n    )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.let_go_buddy_sessions": {
      "name": "let_go_buddy_sessions",
      "schema": "",
      "columns": {
        "session_id": {
          "name": "session_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "let_go_buddy_sessions_session_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "is_completed": {
          "name": "is_completed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "let_go_buddy_sessions_user_id_user_profiles_profile_id_fk": {
          "name": "let_go_buddy_sessions_user_id_user_profiles_profile_id_fk",
          "tableFrom": "let_go_buddy_sessions",
          "tableTo": "user_profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "let_go_buddy_sessions_select_policy": {
          "name": "let_go_buddy_sessions_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\"let_go_buddy_sessions\".\"user_id\" = (select auth.uid())"
        },
        "let_go_buddy_sessions_insert_policy": {
          "name": "let_go_buddy_sessions_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"let_go_buddy_sessions\".\"user_id\" = (select auth.uid())"
        },
        "let_go_buddy_sessions_update_policy": {
          "name": "let_go_buddy_sessions_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\"let_go_buddy_sessions\".\"user_id\" = (select auth.uid())",
          "withCheck": "\"let_go_buddy_sessions\".\"user_id\" = (select auth.uid())"
        },
        "let_go_buddy_sessions_delete_policy": {
          "name": "let_go_buddy_sessions_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "\"let_go_buddy_sessions\".\"user_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.locations": {
      "name": "locations",
      "schema": "",
      "columns": {
        "location_id": {
          "name": "location_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "locations_location_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "name": {
          "name": "name",
          "type": "location",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "country": {
          "name": "country",
          "type": "country",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "display_name": {
          "name": "display_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "currency": {
          "name": "currency",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "timezone": {
          "name": "timezone",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "population": {
          "name": "population",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "locations_select_policy": {
          "name": "locations_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.message_participants": {
      "name": "message_participants",
      "schema": "",
      "columns": {
        "conversation_id": {
          "name": "conversation_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "is_hidden": {
          "name": "is_hidden",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "message_participants_conversation_id_user_conversations_conversation_id_fk": {
          "name": "message_participants_conversation_id_user_conversations_conversation_id_fk",
          "tableFrom": "message_participants",
          "tableTo": "user_conversations",
          "columnsFrom": [
            "conversation_id"
          ],
          "columnsTo": [
            "conversation_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "message_participants_profile_id_user_profiles_profile_id_fk": {
          "name": "message_participants_profile_id_user_profiles_profile_id_fk",
          "tableFrom": "message_participants",
          "tableTo": "user_profiles",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "message_participants_conversation_id_profile_id_pk": {
          "name": "message_participants_conversation_id_profile_id_pk",
          "columns": [
            "conversation_id",
            "profile_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "message_participants_select_policy": {
          "name": "message_participants_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\"message_participants\".\"profile_id\" = (select auth.uid())"
        },
        "message_participants_insert_policy": {
          "name": "message_participants_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"message_participants\".\"profile_id\" = (select auth.uid())"
        },
        "message_participants_delete_policy": {
          "name": "message_participants_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "\"message_participants\".\"profile_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.product_images": {
      "name": "product_images",
      "schema": "",
      "columns": {
        "product_id": {
          "name": "product_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "image_url": {
          "name": "image_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "image_order": {
          "name": "image_order",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "is_primary": {
          "name": "is_primary",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "product_images_product_id_products_product_id_fk": {
          "name": "product_images_product_id_products_product_id_fk",
          "tableFrom": "product_images",
          "tableTo": "products",
          "columnsFrom": [
            "product_id"
          ],
          "columnsTo": [
            "product_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "product_images_product_id_image_order_pk": {
          "name": "product_images_product_id_image_order_pk",
          "columns": [
            "product_id",
            "image_order"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "product_images_select_policy": {
          "name": "product_images_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "product_images_insert_policy": {
          "name": "product_images_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (\n      SELECT 1 FROM products \n      WHERE products.product_id = \"product_images\".\"product_id\" \n      AND products.seller_id = (select auth.uid())\n    )"
        },
        "product_images_update_policy": {
          "name": "product_images_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n      SELECT 1 FROM products \n      WHERE products.product_id = \"product_images\".\"product_id\" \n      AND products.seller_id = (select auth.uid())\n    )",
          "withCheck": "EXISTS (\n      SELECT 1 FROM products \n      WHERE products.product_id = \"product_images\".\"product_id\" \n      AND products.seller_id = (select auth.uid())\n    )"
        },
        "product_images_delete_policy": {
          "name": "product_images_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n      SELECT 1 FROM products \n      WHERE products.product_id = \"product_images\".\"product_id\" \n      AND products.seller_id = (select auth.uid())\n    )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.product_likes": {
      "name": "product_likes",
      "schema": "",
      "columns": {
        "product_id": {
          "name": "product_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "product_likes_product_id_products_product_id_fk": {
          "name": "product_likes_product_id_products_product_id_fk",
          "tableFrom": "product_likes",
          "tableTo": "products",
          "columnsFrom": [
            "product_id"
          ],
          "columnsTo": [
            "product_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "product_likes_user_id_user_profiles_profile_id_fk": {
          "name": "product_likes_user_id_user_profiles_profile_id_fk",
          "tableFrom": "product_likes",
          "tableTo": "user_profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "product_likes_product_id_user_id_pk": {
          "name": "product_likes_product_id_user_id_pk",
          "columns": [
            "product_id",
            "user_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "product_likes_select_policy": {
          "name": "product_likes_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "product_likes_insert_policy": {
          "name": "product_likes_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"product_likes\".\"user_id\" = (select auth.uid())"
        },
        "product_likes_delete_policy": {
          "name": "product_likes_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "\"product_likes\".\"user_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.product_views": {
      "name": "product_views",
      "schema": "",
      "columns": {
        "view_id": {
          "name": "view_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "product_views_view_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "product_id": {
          "name": "product_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "viewed_at": {
          "name": "viewed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "product_views_product_id_products_product_id_fk": {
          "name": "product_views_product_id_products_product_id_fk",
          "tableFrom": "product_views",
          "tableTo": "products",
          "columnsFrom": [
            "product_id"
          ],
          "columnsTo": [
            "product_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "product_views_user_id_user_profiles_profile_id_fk": {
          "name": "product_views_user_id_user_profiles_profile_id_fk",
          "tableFrom": "product_views",
          "tableTo": "user_profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "product_views_select_policy": {
          "name": "product_views_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "product_views_insert_policy": {
          "name": "product_views_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "product_views_delete_policy": {
          "name": "product_views_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.products": {
      "name": "products",
      "schema": "",
      "columns": {
        "product_id": {
          "name": "product_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "products_product_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "seller_id": {
          "name": "seller_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "price": {
          "name": "price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "currency": {
          "name": "currency",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'THB'"
        },
        "category_id": {
          "name": "category_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "condition": {
          "name": "condition",
          "type": "product_condition",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "location": {
          "name": "location",
          "type": "location",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "country": {
          "name": "country",
          "type": "country",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'Thailand'"
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "tags": {
          "name": "tags",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "is_sold": {
          "name": "is_sold",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "price_type": {
          "name": "price_type",
          "type": "price_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'Fixed'"
        },
        "stats": {
          "name": "stats",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{\"likes\":0}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "products_seller_id_user_profiles_profile_id_fk": {
          "name": "products_seller_id_user_profiles_profile_id_fk",
          "tableFrom": "products",
          "tableTo": "user_profiles",
          "columnsFrom": [
            "seller_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "products_category_id_categories_category_id_fk": {
          "name": "products_category_id_categories_category_id_fk",
          "tableFrom": "products",
          "tableTo": "categories",
          "columnsFrom": [
            "category_id"
          ],
          "columnsTo": [
            "category_id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "products_select_policy": {
          "name": "products_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "products_insert_policy": {
          "name": "products_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"products\".\"seller_id\" = (select auth.uid())"
        },
        "products_update_policy": {
          "name": "products_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\"products\".\"seller_id\" = (select auth.uid())",
          "withCheck": "\"products\".\"seller_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.trust_scores": {
      "name": "trust_scores",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "score": {
          "name": "score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "completed_trades": {
          "name": "completed_trades",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "trust_scores_user_id_user_profiles_profile_id_fk": {
          "name": "trust_scores_user_id_user_profiles_profile_id_fk",
          "tableFrom": "trust_scores",
          "tableTo": "user_profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "trust_scores_select_policy": {
          "name": "trust_scores_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "trust_scores_insert_policy": {
          "name": "trust_scores_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"trust_scores\".\"user_id\" = (select auth.uid())"
        },
        "trust_scores_update_policy": {
          "name": "trust_scores_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\"trust_scores\".\"user_id\" = (select auth.uid())",
          "withCheck": "\"trust_scores\".\"user_id\" = (select auth.uid())"
        },
        "trust_scores_delete_policy": {
          "name": "trust_scores_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "\"trust_scores\".\"user_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_conversations": {
      "name": "user_conversations",
      "schema": "",
      "columns": {
        "conversation_id": {
          "name": "conversation_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "user_conversations_conversation_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "product_id": {
          "name": "product_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_conversations_product_id_products_product_id_fk": {
          "name": "user_conversations_product_id_products_product_id_fk",
          "tableFrom": "user_conversations",
          "tableTo": "products",
          "columnsFrom": [
            "product_id"
          ],
          "columnsTo": [
            "product_id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "user_conversations_select_policy": {
          "name": "user_conversations_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n      SELECT 1 FROM message_participants mp \n      WHERE mp.conversation_id = \"user_conversations\".\"conversation_id\" \n      AND mp.profile_id = (select auth.uid())\n    )"
        },
        "user_conversations_insert_policy": {
          "name": "user_conversations_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_levels": {
      "name": "user_levels",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "level": {
          "name": "level",
          "type": "user_level",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'Explorer'"
        },
        "free_let_go_buddy_uses": {
          "name": "free_let_go_buddy_uses",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 2
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_levels_user_id_user_profiles_profile_id_fk": {
          "name": "user_levels_user_id_user_profiles_profile_id_fk",
          "tableFrom": "user_levels",
          "tableTo": "user_profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "user_levels_select_policy": {
          "name": "user_levels_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\"user_levels\".\"user_id\" = (select auth.uid())"
        },
        "user_levels_insert_policy": {
          "name": "user_levels_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"user_levels\".\"user_id\" = (select auth.uid())"
        },
        "user_levels_update_policy": {
          "name": "user_levels_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\"user_levels\".\"user_id\" = (select auth.uid())",
          "withCheck": "\"user_levels\".\"user_id\" = (select auth.uid())"
        },
        "user_levels_delete_policy": {
          "name": "user_levels_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "\"user_levels\".\"user_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_messages": {
      "name": "user_messages",
      "schema": "",
      "columns": {
        "message_id": {
          "name": "message_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "user_messages_message_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "conversation_id": {
          "name": "conversation_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "sender_id": {
          "name": "sender_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "receiver_id": {
          "name": "receiver_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "message_type": {
          "name": "message_type",
          "type": "message_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'Text'"
        },
        "media_url": {
          "name": "media_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "seen": {
          "name": "seen",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_messages_conversation_id_user_conversations_conversation_id_fk": {
          "name": "user_messages_conversation_id_user_conversations_conversation_id_fk",
          "tableFrom": "user_messages",
          "tableTo": "user_conversations",
          "columnsFrom": [
            "conversation_id"
          ],
          "columnsTo": [
            "conversation_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "user_messages_sender_id_user_profiles_profile_id_fk": {
          "name": "user_messages_sender_id_user_profiles_profile_id_fk",
          "tableFrom": "user_messages",
          "tableTo": "user_profiles",
          "columnsFrom": [
            "sender_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "user_messages_receiver_id_user_profiles_profile_id_fk": {
          "name": "user_messages_receiver_id_user_profiles_profile_id_fk",
          "tableFrom": "user_messages",
          "tableTo": "user_profiles",
          "columnsFrom": [
            "receiver_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "user_messages_select_policy": {
          "name": "user_messages_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\"user_messages\".\"sender_id\" = (select auth.uid()) OR \"user_messages\".\"receiver_id\" = (select auth.uid())"
        },
        "user_messages_insert_policy": {
          "name": "user_messages_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"user_messages\".\"sender_id\" = (select auth.uid())"
        },
        "user_messages_update_policy": {
          "name": "user_messages_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\"user_messages\".\"sender_id\" = (select auth.uid())",
          "withCheck": "\"user_messages\".\"sender_id\" = (select auth.uid())"
        },
        "user_messages_delete_policy": {
          "name": "user_messages_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "\"user_messages\".\"sender_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_notifications": {
      "name": "user_notifications",
      "schema": "",
      "columns": {
        "notification_id": {
          "name": "notification_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "user_notifications_notification_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "type": {
          "name": "type",
          "type": "notification_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "sender_id": {
          "name": "sender_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "receiver_id": {
          "name": "receiver_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "product_id": {
          "name": "product_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "message_id": {
          "name": "message_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "is_read": {
          "name": "is_read",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "read_at": {
          "name": "read_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "data": {
          "name": "data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_notifications_sender_id_user_profiles_profile_id_fk": {
          "name": "user_notifications_sender_id_user_profiles_profile_id_fk",
          "tableFrom": "user_notifications",
          "tableTo": "user_profiles",
          "columnsFrom": [
            "sender_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "user_notifications_receiver_id_user_profiles_profile_id_fk": {
          "name": "user_notifications_receiver_id_user_profiles_profile_id_fk",
          "tableFrom": "user_notifications",
          "tableTo": "user_profiles",
          "columnsFrom": [
            "receiver_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "user_notifications_product_id_products_product_id_fk": {
          "name": "user_notifications_product_id_products_product_id_fk",
          "tableFrom": "user_notifications",
          "tableTo": "products",
          "columnsFrom": [
            "product_id"
          ],
          "columnsTo": [
            "product_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "user_notifications_message_id_user_messages_message_id_fk": {
          "name": "user_notifications_message_id_user_messages_message_id_fk",
          "tableFrom": "user_notifications",
          "tableTo": "user_messages",
          "columnsFrom": [
            "message_id"
          ],
          "columnsTo": [
            "message_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "user_notifications_select_policy": {
          "name": "user_notifications_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\"user_notifications\".\"receiver_id\" = (select auth.uid())"
        },
        "user_notifications_insert_policy": {
          "name": "user_notifications_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"user_notifications\".\"sender_id\" = (select auth.uid())"
        },
        "user_notifications_update_policy": {
          "name": "user_notifications_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\"user_notifications\".\"receiver_id\" = (select auth.uid())",
          "withCheck": "\"user_notifications\".\"receiver_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_profiles": {
      "name": "user_profiles",
      "schema": "",
      "columns": {
        "profile_id": {
          "name": "profile_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "bio": {
          "name": "bio",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "location": {
          "name": "location",
          "type": "location",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "level": {
          "name": "level",
          "type": "user_level",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'Explorer'"
        },
        "total_likes": {
          "name": "total_likes",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "rating": {
          "name": "rating",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0.00'"
        },
        "appreciation_badge": {
          "name": "appreciation_badge",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_profiles_profile_id_users_id_fk": {
          "name": "user_profiles_profile_id_users_id_fk",
          "tableFrom": "user_profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "profile_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_profiles_profile_id_unique": {
          "name": "user_profiles_profile_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "profile_id"
          ]
        },
        "user_profiles_username_unique": {
          "name": "user_profiles_username_unique",
          "nullsNotDistinct": false,
          "columns": [
            "username"
          ]
        },
        "user_profiles_phone_unique": {
          "name": "user_profiles_phone_unique",
          "nullsNotDistinct": false,
          "columns": [
            "phone"
          ]
        }
      },
      "policies": {
        "user_profiles_select_policy": {
          "name": "user_profiles_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "user_profiles_insert_policy": {
          "name": "user_profiles_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.uid()) = \"user_profiles\".\"profile_id\""
        },
        "user_profiles_update_policy": {
          "name": "user_profiles_update_policy",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"user_profiles\".\"profile_id\"",
          "withCheck": "(select auth.uid()) = \"user_profiles\".\"profile_id\""
        },
        "user_profiles_delete_policy": {
          "name": "user_profiles_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = \"user_profiles\".\"profile_id\""
        }
      },
      "checkConstraints": {
        "rating_check": {
          "name": "rating_check",
          "value": "rating >= 0 AND rating <= 5"
        }
      },
      "isRLSEnabled": false
    },
    "public.user_reviews": {
      "name": "user_reviews",
      "schema": "",
      "columns": {
        "review_id": {
          "name": "review_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "user_reviews_review_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "reviewer_id": {
          "name": "reviewer_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "reviewee_id": {
          "name": "reviewee_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "rating": {
          "name": "rating",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_reviews_reviewer_id_user_profiles_profile_id_fk": {
          "name": "user_reviews_reviewer_id_user_profiles_profile_id_fk",
          "tableFrom": "user_reviews",
          "tableTo": "user_profiles",
          "columnsFrom": [
            "reviewer_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "user_reviews_reviewee_id_user_profiles_profile_id_fk": {
          "name": "user_reviews_reviewee_id_user_profiles_profile_id_fk",
          "tableFrom": "user_reviews",
          "tableTo": "user_profiles",
          "columnsFrom": [
            "reviewee_id"
          ],
          "columnsTo": [
            "profile_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "user_reviews_select_policy": {
          "name": "user_reviews_select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "user_reviews_insert_policy": {
          "name": "user_reviews_insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"user_reviews\".\"reviewer_id\" = (select auth.uid())"
        },
        "user_reviews_delete_policy": {
          "name": "user_reviews_delete_policy",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "\"user_reviews\".\"reviewer_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.country": {
      "name": "country",
      "schema": "public",
      "values": [
        "Thailand",
        "Korea"
      ]
    },
    "public.declutter_situation": {
      "name": "declutter_situation",
      "schema": "public",
      "values": [
        "Moving",
        "Minimalism",
        "Spring Cleaning",
        "Other"
      ]
    },
    "public.location": {
      "name": "location",
      "schema": "public",
      "values": [
        "Bangkok",
        "ChiangMai",
        "Phuket",
        "HuaHin",
        "Pattaya",
        "Krabi",
        "Koh Samui",
        "Other Thai Cities",
        "Seoul",
        "Busan",
        "Incheon",
        "Daegu",
        "Daejeon",
        "Gwangju",
        "Ulsan",
        "Other Korean Cities"
      ]
    },
    "public.message_type": {
      "name": "message_type",
      "schema": "public",
      "values": [
        "Text",
        "Image",
        "File",
        "Audio",
        "Video",
        "Location"
      ]
    },
    "public.notification_type": {
      "name": "notification_type",
      "schema": "public",
      "values": [
        "Message",
        "Like",
        "Reply",
        "Mention"
      ]
    },
    "public.price_type": {
      "name": "price_type",
      "schema": "public",
      "values": [
        "Fixed",
        "Negotiable",
        "Free",
        "Auction"
      ]
    },
    "public.product_category": {
      "name": "product_category",
      "schema": "public",
      "values": [
        "Electronics",
        "Clothing",
        "Books",
        "Home",
        "Sports",
        "Beauty",
        "Toys",
        "Automotive",
        "Health",
        "Other"
      ]
    },
    "public.product_condition": {
      "name": "product_condition",
      "schema": "public",
      "values": [
        "New",
        "Like New",
        "Excellent",
        "Good",
        "Fair",
        "Poor"
      ]
    },
    "public.recommendation_action": {
      "name": "recommendation_action",
      "schema": "public",
      "values": [
        "Keep",
        "Sell",
        "Donate",
        "Recycle",
        "Repair",
        "Repurpose",
        "Discard"
      ]
    },
    "public.user_level": {
      "name": "user_level",
      "schema": "public",
      "values": [
        "Explorer",
        "Connector",
        "Sharer",
        "Glowmaker",
        "Legend"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}